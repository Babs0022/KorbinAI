
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- USER DATA ---
    
    // FIX: This rule allows a user to create their own document during signup
    // and to read/update it later. This was the missing piece.
    match /users/{userId} {
      allow create, read, update: if request.auth.uid == userId;
    }
    
    // This rule handles user subcollections like 'promptHistory' and 'userSettings'.
    match /users/{userId}/{document=**} {
       allow read, write: if request.auth.uid == userId;
    }
    
    // Subscriptions are read-only for the owner. Writes are handled by the backend.
    match /userSubscriptions/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if false; 
    }
    
    // Transactions are written by the backend and not read by the client.
    match /transactions/{transactionId} {
      allow read, write: if false; 
    }
    
    // --- PUBLIC & SHARED DATA ---
    
    // Anyone can subscribe to the newsletter.
    match /newsletterSubscribers/{email} {
      allow write: if true;
      allow read: if false;
    }
    
    // Any signed-in user can read app announcements.
    match /appAnnouncements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // --- TEAM DATA ---
    
    // WARNING: Access to the new 'teams' collection is currently blocked by default.
    // After this fix, you will likely encounter a new permission error on the
    // collaboration page. We will need to implement proper, secure, role-based
    // rules for teams as the next step.
    match /teams/{teamId}/{document=**} {
        allow read, write: if false;
    }
  }
}
