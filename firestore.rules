
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own profile data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only manage their own subcollections (like promptHistory).
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // User settings are private to the owner.
    match /userSettings/{userId} {
       allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Announcements are read-only for authenticated users.
    // Writing is locked down, should be done via Admin SDK.
    match /appAnnouncements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    
    // Transaction documents can only be read by the user who initiated them.
    // Writes are handled by secure Cloud Functions.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if false; // Only backend can write
    }

    // User subscription data is private and read-only for the client.
    // Writes are handled by secure Cloud Functions.
    match /userSubscriptions/{userId} {
       allow read: if request.auth != null && request.auth.uid == userId;
       allow write: if false; // Only backend can write
    }
  }
}
