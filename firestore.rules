
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions for Role-Based Access ---
    function isTeamMember(teamId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/teams/$(teamId)) &&
             get(/databases/$(database)/documents/teams/$(teamId)).data.members.filter(member => member.uid == request.auth.uid).size() > 0;
    }
    
    function getUserRoleInTeam(teamId) {
        let members = get(/databases/$(database)/documents/teams/$(teamId)).data.members;
        let matching_members = members.filter(member => member.uid == request.auth.uid);
        return matching_members.size() > 0 ? matching_members[0].role : null;
    }

    // --- USER DATA ---
    match /users/{userId} {
      // A user can create their own doc during signup and read/update it later.
      allow create, read, update: if request.auth.uid == userId;
    }
    
    match /users/{userId}/{document=**} {
       // A user can manage all documents in their own subcollections.
       allow read, write: if request.auth.uid == userId;
    }
    
    match /userSubscriptions/{userId} {
      // A user can read their own subscription status. Writes are handled by the backend.
      allow read: if request.auth.uid == userId;
      allow write: if false; 
    }
    
    match /transactions/{transactionId} {
      // Transactions are backend-only.
      allow read, write: if false; 
    }
    
    // --- PUBLIC & SHARED DATA ---
    match /newsletterSubscribers/{email} {
      // Anyone can subscribe to the newsletter.
      allow write: if true;
      allow read: if false;
    }
    
    match /appAnnouncements/{announcementId} {
      // Any signed-in user can read app announcements.
      allow read: if request.auth != null;
      allow write: if false;
    }

    // --- TEAM DATA ---
    match /teams/{teamId} {
      // A user can create a team if they correctly set themselves as owner & admin.
      allow create: if request.auth != null
                    && request.resource.data.ownerId == request.auth.uid
                    && request.resource.data.members[0].uid == request.auth.uid
                    && request.resource.data.members[0].role == 'admin';
                    
      // A team member can read their team's document.
      allow read: if isTeamMember(teamId);
                    
      // Only an admin can update the team document (e.g., invite/remove members).
      allow update: if getUserRoleInTeam(teamId) == 'admin';
    }
    
    match /teams/{teamId}/sharedPrompts/{promptId} {
      // Any team member can read shared prompts.
      allow read: if isTeamMember(teamId);
      
      // Admins and editors can create, update, and delete shared prompts.
      allow write: if getUserRoleInTeam(teamId) == 'admin' || getUserRoleInTeam(teamId) == 'editor';
    }
  }
}
