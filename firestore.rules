rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own user document and admins can read any.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow create, update: if request.auth.uid == userId;
    }

    // Allow admins to read/write to the admins collection.
    match /admins/{adminId} {
      allow read, write: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Projects are owned by users.
    match /projects/{projectId} {
      allow read, create, update, delete: if request.auth.uid == resource.data.userId;
    }

    // Generations are linked to projects and owned by users.
    match /generations/{generationId} {
      allow read, create, update, delete: if request.auth.uid == resource.data.userId;
    }

    // Chat sessions are owned by users.
    match /chatSessions/{chatId} {
      allow read, create, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // User Subscriptions are private to each user.
    match /userSubscriptions/{userId} {
        allow read: if request.auth.uid == userId;
    }
    
    // Transactions are private to each user.
    match /transactions/{transactionId} {
        allow read: if request.auth.uid == resource.data.userId;
    }

    // Feedback can be created by any authenticated user. Admins can read.
    match /feedback/{feedbackId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // User reports can be created by any authenticated user. Admins can read.
    match /userReports/{reportId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Verification requests can be created/read by the user, and read/updated by admins.
    match /verificationRequests/{userId} {
        allow read, create: if request.auth.uid == userId;
        allow read, update: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}
