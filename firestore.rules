
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- HELPER FUNCTIONS ---
    function getTeamData(teamId) {
      return get(/databases/$(database)/documents/teams/$(teamId)).data;
    }
    
    function isTeamMember(teamId, userId) {
      // Check if the user ID exists as a key in the members map.
      return userId in getTeamData(teamId).members;
    }
    
    function getRole(teamId, userId) {
      return getTeamData(teamId).members[userId].role;
    }

    // --- USER DATA ---
    match /users/{userId} {
      allow create, read, update: if request.auth.uid == userId;
    }

    // This rule handles user subcollections like 'promptHistory' and 'userSettings'.
    match /users/{userId}/{document=**} {
       allow read, write: if request.auth.uid == userId;
    }
    
    // --- PAYMENTS & SUBSCRIPTIONS (Backend-controlled) ---
    match /userSubscriptions/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if false; 
    }
    
    match /transactions/{transactionId} {
      allow read, write: if false; 
    }
    
    // --- PUBLIC DATA ---
    match /newsletterSubscribers/{email} {
      allow create: if true;
    }
    
    match /appAnnouncements/{announcementId} {
      allow read: if request.auth != null;
    }

    // --- TEAM DATA (Role-Based Access) ---
    match /teams/{teamId} {
      allow create: if request.auth != null &&
                      request.resource.data.ownerId == request.auth.uid &&
                      request.resource.data.members[request.auth.uid].role == 'admin';
                      
      allow read: if isTeamMember(teamId, request.auth.uid);
      
      allow update: if getRole(teamId, request.auth.uid) == 'admin';
    }

    match /teams/{teamId}/sharedPrompts/{promptId} {
      allow read: if isTeamMember(teamId, request.auth.uid);

      allow create, delete: if getRole(teamId, request.auth.uid) == 'admin' ||
                                getRole(teamId, request.auth.uid) == 'editor';
    }
    
    // NEW: Rules for the team chat subcollection
    match /teams/{teamId}/chatMessages/{messageId} {
        // Any team member can read and send messages.
        allow read, create: if isTeamMember(teamId, request.auth.uid);
        
        // Disallow editing or deleting messages for simplicity and integrity.
        allow update, delete: if false;
    }
  }
}
