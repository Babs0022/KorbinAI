
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only manage their own document.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Users can only manage their own prompt history.
    match /users/{userId}/promptHistory/{promptId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only manage their own settings.
    match /userSettings/{userId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Onboarding info can only be managed by the user themselves.
    match /users/{userId}/onboardingInfo/{docId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Transactions can be created by authenticated users, but only read/updated securely by backend functions.
    match /transactions/{transactionId} {
       allow create: if request.auth != null;
       allow read, update, delete: if false; // Only backend can manage
    }

    // Subscriptions can only be read by the user, managed by backend.
    match /userSubscriptions/{userId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create, update, delete: if false; // Only backend can manage
    }
    
    // Announcements are public read-only for authenticated users.
    match /appAnnouncements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin/backend can write
    }
  }
}
