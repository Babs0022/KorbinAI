
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can create their own profile and can only read/update their own.
    match /users/{userId} {
      allow read, update: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }
    
    // Users can only manage their own chat sessions.
    match /chatSessions/{chatId} {
      allow read, update, delete: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Users can only manage their own projects.
    match /projects/{projectId} {
       allow read, update, delete: if isSignedIn() && isOwner(resource.data.userId);
       allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Users can only manage their own generated content.
    match /generations/{generationId} {
      allow read: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }

    // Authenticated users can create feedback. They cannot read others' feedback.
    match /feedback/{feedbackId} {
      allow read: if false; // No one can read feedback directly
      allow create: if isSignedIn();
    }
    
    // Subscriptions can only be read by the owner. They are created server-side.
    match /userSubscriptions/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      // Writes are handled by Cloud Functions, so no client write access is needed.
      allow write: if false; 
    }
    
    // Transactions can only be read by the owner. They are created server-side.
    match /transactions/{transactionId} {
       allow read: if isSignedIn() && isOwner(resource.data.userId);
       // Writes are handled by Cloud Functions, so no client write access is needed.
       allow write: if false;
    }
  }
}

