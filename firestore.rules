
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admins: Can read and write anything
    match /admins/{adminId} {
      allow read, write: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists;
    }

    // Users: Can read/write their own document
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null;
    }

    // User Subscriptions: Can read their own subscription
    match /userSubscriptions/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Projects: Can read/write their own projects
    match /projects/{projectId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Generations: Can read/write their own generations
    match /generations/{generationId} {
        allow read, write: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }

    // Chat Sessions: Can read/write their own chat sessions
    match /chatSessions/{chatId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Feedback: Authenticated users can create feedback
    match /feedback/{feedbackId} {
      allow create: if request.auth != null;
      // Admins can read all feedback
      allow read: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists;
    }
    
    // User Reports: Authenticated users can create reports
    match /userReports/{reportId} {
        allow create: if request.auth != null;
        // Admins can read all reports
        allow read: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists;
    }

    // Verification Requests: Authenticated users can create/update their own request
    match /verificationRequests/{userId} {
        allow read, write: if isOwner(userId);
        allow create: if isOwner(request.resource.data.userId);
        // Admins can read all requests
        allow read: if get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists;
    }
  }
}
